const https = require('https');
const { MongoClient } = require('mongodb');

// Google Maps API key
const apiKey = 'api key goes here';

// MongoDB connection string
const uri = 'mongodb://localhost:27017/gmapsstuff';

// Function to convert address to latitude and longitude
function getLocation(address) {
  const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${apiKey}`;

  return new Promise((resolve, reject) => {
    https.get(url, res => {
      let data = '';
      res.on('data', chunk => {
        data += chunk;
      });

      res.on('end', () => {
        const result = JSON.parse(data);
        if (result.status === 'OK') {
          const location = result.results[0].geometry.location;
          resolve(location);
        } else {
          reject(new Error(`Failed to get location for ${address}: ${result.status}`));
        }
      });
    }).on('error', err => {
      reject(err);
    });
  });
}

// Function to get directions from origin to destination
function getDirections(origin, destination) {
  const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${encodeURIComponent(origin)}&destination=${encodeURIComponent(destination)}&key=${apiKey}`;

  return new Promise((resolve, reject) => {
    https.get(url, res => {
      let data = '';
      res.on('data', chunk => {
        data += chunk;
      });

      res.on('end', () => {
        const result = JSON.parse(data);
        if (result.status === 'OK') {
          const directions = {
            duration: result.routes[0].legs[0].duration.text,
            distance: result.routes[0].legs[0].distance.text,
            steps: result.routes[0].legs[0].steps.map(step => step.html_instructions)
          };
          resolve(directions);
        } else {
          reject(new Error(`Failed to get directions from ${origin} to ${destination}: ${result.status}`));
        }
      });
    }).on('error', err => {
      reject(err);
    });
  });
}

// some example fns
async function main() {
  try {
    // Get location of Hill Center
    const hillCenter = await getLocation('Hill Center, Rutgers University, New Brunswick, NJ');

    // Get location of Busch Student Center
    const buschStudentCenter = await getLocation('Busch Student Center, Piscataway Township, NJ');

    // Get directions from Busch Student Center to Hill Center
    const directions = await getDirections(`${buschStudentCenter.lat},${buschStudentCenter.lng}`, `${hillCenter.lat},${hillCenter.lng}`);

    // Connect to MongoDB
    const client = await MongoClient.connect(uri);
    const db = client.db('mydb');

    // Insert route instructions into MongoDB
    await db.collection('routeinstructions').insertOne({ instructions: directions.steps });

    console.log('Route instructions saved to MongoDB!');
  } catch (err) {
    console.error(err);
  } finally {
    // Close MongoDB connection
    client.close();
  }
}

main();
